[{"/Users/omart/Documents/React/pair-gen/src/index.tsx":"1","/Users/omart/Documents/React/pair-gen/src/reportWebVitals.ts":"2","/Users/omart/Documents/React/pair-gen/src/App.tsx":"3","/Users/omart/Documents/React/pair-gen/src/components/RollButton/RollButton.tsx":"4","/Users/omart/Documents/React/pair-gen/src/components/PairInput/PairInput.tsx":"5","/Users/omart/Documents/React/pair-gen/src/components/DndCards/DndCards.tsx":"6","/Users/omart/Documents/React/pair-gen/src/components/PairCard/PairCard.tsx":"7"},{"size":449,"mtime":1607755737711,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607462055402,"results":"10","hashOfConfig":"9"},{"size":6073,"mtime":1608080982514,"results":"11","hashOfConfig":"9"},{"size":841,"mtime":1607755737710,"results":"12","hashOfConfig":"9"},{"size":3459,"mtime":1607755737709,"results":"13","hashOfConfig":"9"},{"size":5319,"mtime":1608084175663,"results":"14","hashOfConfig":"9"},{"size":2254,"mtime":1608082131816,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cw9fk7",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"/Users/omart/Documents/React/pair-gen/src/index.tsx",[],"/Users/omart/Documents/React/pair-gen/src/reportWebVitals.ts",[],"/Users/omart/Documents/React/pair-gen/src/App.tsx",["32"],"/Users/omart/Documents/React/pair-gen/src/components/RollButton/RollButton.tsx",[],"/Users/omart/Documents/React/pair-gen/src/components/PairInput/PairInput.tsx",[],"/Users/omart/Documents/React/pair-gen/src/components/DndCards/DndCards.tsx",["33","34","35","36"],"/Users/omart/Documents/React/pair-gen/src/components/PairCard/PairCard.tsx",["37","38"],"import React, { useEffect } from \"react\";\nimport { Card, Tag } from \"antd\";\nimport \"./PairCard.css\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport swap from \"../../imgs/swap.png\";\n\ninterface PairCardProps {\n  pair: string[];\n  pairIndex: number;\n  highlightClassName: string;\n  isDragging?: boolean;\n}\n\nfunction PairCard({\n  pair,\n  pairIndex,\n  highlightClassName,\n  isDragging,\n}: PairCardProps) {\n  useEffect(() => {\n    console.table(pair);\n  }, []);\n  const getItemStyle = (draggableStyle: any, snapshot: any) => {\n    const style = {\n      ...draggableStyle,\n\n      // opt out of pointer-events: none for dragging items\n      ...(snapshot.isDragging && { pointerEvents: \"auto\" }),\n    };\n\n    if (snapshot.combineWith) {\n      return { ...style, cursor: `url(${swap}), auto` };\n    }\n    return style;\n  };\n\n  return (\n    <Card\n      key={pairIndex}\n      className={`card ${pair.length || \"add-new-pair\"}  ${highlightClassName}`}\n      title={`Pair ${pairIndex}`}\n      size={\"small\"}\n      bordered={false}\n      data-visible={isDragging ? 0 : 1}\n    >\n      <Droppable\n        key={pairIndex}\n        direction={\"vertical\"}\n        droppableId={`${pairIndex}`}\n        isCombineEnabled\n      >\n        {(provided, snapshot) => (\n          <div\n            className={\"tag-container\"}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {pair.map((person, index) => (\n              <Draggable\n                index={index}\n                key={`${person}`}\n                draggableId={`${person}`}\n              >\n                {(provided, snapshot) => (\n                  <span\n                    className={\"tag\"}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                      provided.draggableProps.style,\n                      snapshot\n                    )}\n                  >\n                    {person}\n                  </span>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </Card>\n  );\n}\n\nexport default PairCard;\n",["39","40"],{"ruleId":"41","severity":1,"message":"42","line":169,"column":9,"nodeType":"43","endLine":169,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":15,"column":10,"nodeType":"46","messageId":"47","endLine":15,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":15,"column":22,"nodeType":"46","messageId":"47","endLine":15,"endColumn":35},{"ruleId":"49","severity":1,"message":"50","line":19,"column":6,"nodeType":"51","endLine":19,"endColumn":16,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":25,"column":6,"nodeType":"51","endLine":25,"endColumn":13,"suggestions":"54"},{"ruleId":"44","severity":1,"message":"55","line":2,"column":16,"nodeType":"46","messageId":"47","endLine":2,"endColumn":19},{"ruleId":"49","severity":1,"message":"56","line":22,"column":6,"nodeType":"51","endLine":22,"endColumn":8,"suggestions":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","@typescript-eslint/no-unused-vars","'isDragging' is assigned a value but never used.","Identifier","unusedVar","'setIsDragging' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onPairChange'. Either include it or remove the dependency array. If 'onPairChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["62"],"React Hook useEffect has a missing dependency: 'dndPairs'. Either include it or remove the dependency array.",["63"],"'Tag' is defined but never used.","React Hook useEffect has a missing dependency: 'pair'. Either include it or remove the dependency array.",["64"],"no-native-reassign",["65"],"no-negated-in-lhs",["66"],{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dndPairs, onPairChange]",{"range":"73","text":"74"},"Update the dependencies array to be: [dndPairs, pairs]",{"range":"75","text":"76"},"Update the dependencies array to be: [pair]",{"range":"77","text":"78"},[619,629],"[dndPairs, onPairChange]",[752,759],"[dndPairs, pairs]",[471,473],"[pair]"]