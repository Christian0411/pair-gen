{"version":3,"sources":["components/PairInput/PairInput.tsx","imgs/logo.png","imgs/dice.svg","components/RollButton/RollButton.tsx","components/PairCard/PairCard.tsx","components/DndCards/DndCards.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Key","PairInput","names","onNewName","onEnter","useState","tags","setTags","nameInput","setNameInput","nameInputRef","useRef","useEffect","JSON","stringify","addTag","tag","String","popTag","item","pop","className","map","index","style","margin","display","alignItems","closable","onClose","e","preventDefault","newTags","filter","current","focus","deleteTag","color","ref","autoFocus","placeholder","length","onChange","target","value","onPaste","pastedTags","pasted","clipboardData","getData","pastedTagsNewline","replace","split","onKeyDown","which","keyCode","trim","RollButton","onClick","doAnimation","onRollAnimationEnd","animation","setAnimation","width","alt","cursor","height","src","dice","onAnimationEnd","data-wobble","PairCard","pair","pairIndex","title","bordered","data-visible","droppableId","direction","isCombineEnabled","provided","snapshot","innerRef","droppableProps","person","draggableId","draggableProps","dragHandleProps","DndCards","pairs","onPairChange","dndPairs","setDndPairs","moveAndUpdatePairs","source","destination","sInd","dInd","items","list","startIndex","endIndex","result","Array","from","splice","removed","reorder","newPairs","droppableSource","droppableDestination","sourceClone","destClone","move","group","onDragEnd","combine","swappeeIndex","findIndex","swapperSource","swapperDestination","swapResult","removedDes","swap","console","log","App","setNames","setPairs","doRollAnimation","setDoRollAnimation","hover","setHover","tooltipVisible","setTooltipVisible","getRandomInt","min","max","Math","ceil","floor","random","generatePairs","useCallback","temp","tempPairs","randomIndex","name1","name2","createRequestUri","window","history","replaceState","join","windowUrl","location","search","namesFromUrl","URLSearchParams","get","namesFromUrlArray","decodeURIComponent","align","justify","gutter","logo","placement","overlayClassName","trigger","visible","fontWeight","onMouseEnter","onMouseLeave","array","setTimeout","navigator","clipboard","writeText","Date","toDateString","href","background","border","CopyOutlined","num","type","bg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10c17baa.chunk.js","sourcesContent":["import { Tag } from \"antd\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport \"./PairInput.css\";\n\ninterface PairInputProps {\n  names: string[];\n  onNewName: (names: string[]) => void;\n  onEnter: (names: string[]) => void;\n}\n\nconst Key = {\n  SPACE: 32,\n  BACKSPACE: 8,\n  LEFT_ARROW: 37,\n  ENTER: 13,\n  TAB: 9,\n};\n\nfunction PairInput({ names, onNewName, onEnter }: PairInputProps) {\n  const [tags, setTags] = useState<string[]>([]);\n\n  const [nameInput, setNameInput] = useState<string>(\"\");\n\n  const nameInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (JSON.stringify(tags) !== JSON.stringify(names)) {\n      setTags(names);\n    }\n  }, [names]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (JSON.stringify(tags) !== JSON.stringify(names)) {\n      onNewName(tags);\n    }\n  }, [tags]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleInput = (e: any) => {\n    e.which = e.which || e.keyCode;\n    if (e.which === Key.SPACE || e.which === Key.TAB) {\n      if (e.target.value.trim(\" \") !== \"\") {\n        e.preventDefault();\n        addTag(e.target.value);\n      }\n    } else if (e.which === Key.BACKSPACE) {\n      if (e.target.value === \"\") {\n        popTag();\n      }\n    } else if (e.which === Key.LEFT_ARROW) {\n      if (e.target.value === \"\") {\n        e.preventDefault();\n        const item = popTag();\n        setNameInput(item);\n      }\n    } else if (e.which === Key.ENTER) {\n      if (e.target.value.trim(\" \") !== \"\") {\n        addTag(e.target.value);\n        onEnter([...tags, e.target.value]);\n      } else {\n        onEnter(tags);\n      }\n    }\n  };\n\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    const pasted = e.clipboardData.getData(\"Text\");\n    let pastedTags;\n\n    const pastedTagsNewline = pasted\n      .replace(/\\r/g, \"\")\n      .split(/\\n/)\n      .filter((item) => item !== \"\");\n\n    if (pastedTagsNewline.length === 1) {\n      pastedTags = pasted.split(\" \").filter((item) => item !== \"\");\n    } else {\n      pastedTags = pastedTagsNewline;\n    }\n\n    setTags([...tags, ...pastedTags]);\n    setNameInput(\"\");\n    e.preventDefault();\n  };\n\n  const addTag = (tag: string) => {\n    setTags([...tags, String(tag)]);\n    setNameInput(\"\");\n  };\n\n  const popTag = (): string => {\n    const item = tags.pop();\n    setTags([...tags]);\n    return item ?? \"\";\n  };\n\n  const deleteTag = (item: string) => {\n    const newTags = tags.filter((tag) => tag !== item);\n    setTags(newTags);\n    nameInputRef?.current?.focus();\n  };\n\n  return (\n    <>\n      <div className=\"input-container\">\n        {tags.map((item: string, index) => (\n          <Tag\n            key={index}\n            style={{ margin: \"4px\", display: \"flex\", alignItems: \"center\" }}\n            closable\n            onClose={(e) => {\n              e.preventDefault();\n              deleteTag(item);\n            }}\n            color=\"#63b89e\"\n          >\n            {item}\n          </Tag>\n        ))}\n        <input\n          className=\"pair-input\"\n          ref={nameInputRef}\n          autoFocus\n          placeholder={(() => {\n            return tags.length ? \"\" : \"Enter names. Ex. chris robert oscar\";\n          })()}\n          onChange={(e) => setNameInput(String(e.target.value))}\n          onPaste={handlePaste}\n          onKeyDown={handleInput}\n          value={nameInput}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default PairInput;\n","export default __webpack_public_path__ + \"static/media/logo.3f1917ed.png\";","export default __webpack_public_path__ + \"static/media/dice.120d193d.svg\";","import React, { useEffect, useState } from \"react\";\nimport dice from \"../../imgs/dice.svg\";\nimport \"./RollButton.css\";\ninterface RollButtonProps {\n  onClick: () => void;\n  onRollAnimationEnd: () => void;\n  doAnimation: number;\n}\n\nfunction RollButton({\n  onClick,\n  doAnimation,\n  onRollAnimationEnd,\n}: RollButtonProps) {\n  const [animation, setAnimation] = useState<number>(doAnimation);\n\n  useEffect(() => {\n    setAnimation(doAnimation);\n  }, [doAnimation]);\n\n  return (\n    <img\n      width=\"30px\"\n      alt=\"roll\"\n      style={{ cursor: \"pointer\" }}\n      height=\"30px\"\n      src={dice}\n      className={\"center image\"}\n      onClick={() => {\n        onClick();\n      }}\n      onAnimationEnd={() => {\n        setAnimation(0);\n        onRollAnimationEnd();\n      }}\n      data-wobble={animation}\n    />\n  );\n}\nexport default RollButton;\n","import React from \"react\";\nimport { Card, Tag } from \"antd\";\nimport \"./PairCard.css\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\n\ninterface PairCardProps {\n  pair: string[];\n  pairIndex: number;\n}\n\nfunction PairCard({ pair, pairIndex }: PairCardProps) {\n  return (\n    <Card\n      key={pairIndex}\n      className={\"card\"}\n      title={`Pair ${pairIndex}`}\n      bordered={false}\n      data-visible={1}\n    >\n      <Droppable\n        key={pairIndex}\n        droppableId={`${pairIndex}`}\n        direction=\"horizontal\"\n        isCombineEnabled\n      >\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            <div className={\"tag-container\"}>\n              {pair.map((person, index) => (\n                <Draggable\n                  index={index}\n                  key={`${person}`}\n                  draggableId={`${person}`}\n                >\n                  {(provided, snapshot) => (\n                    <span\n                      className=\"tag\"\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      {person}\n                    </span>\n                  )}\n                </Draggable>\n              ))}\n            </div>\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </Card>\n  );\n}\nexport default PairCard;\n","import React, { useEffect, useState } from \"react\";\nimport PairCard from \"../PairCard/PairCard\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\ninterface DndCardsProps {\n  pairs: string[][];\n  onPairChange: (newPairs: string[][]) => void;\n}\n\nfunction DndCards({ pairs, onPairChange }: DndCardsProps) {\n  const [dndPairs, setDndPairs] = useState<string[][]>(pairs);\n\n  useEffect(() => {\n    onPairChange(dndPairs);\n  }, [dndPairs]);\n\n  useEffect(() => {\n    if (JSON.stringify(dndPairs) !== JSON.stringify(pairs)) {\n      setDndPairs(pairs);\n    }\n  }, [pairs]);\n\n  const reorder = (list: any, startIndex: any, endIndex: any) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const move = (\n    source: any,\n    destination: any,\n    droppableSource: any,\n    droppableDestination: any\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  };\n\n  const swap = (\n    source: any,\n    destination: any,\n    droppableSource: any,\n    droppableDestination: any\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    const [removedDes] = destClone.splice(\n      droppableDestination.index,\n      1,\n      removed\n    );\n\n    sourceClone.splice(droppableSource.index, 0, removedDes);\n\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n  };\n\n  const moveAndUpdatePairs = (source: any, destination: any) => {\n    if (!destination) {\n      return;\n    }\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) {\n      const items = reorder(dndPairs[sInd], source.index, destination.index);\n      const newPairs: any = [...dndPairs];\n      newPairs[sInd] = items;\n      setDndPairs(newPairs);\n    } else {\n      const result = move(dndPairs[sInd], dndPairs[dInd], source, destination);\n      const newPairs = [...dndPairs];\n      newPairs[sInd] = result[sInd];\n      newPairs[dInd] = result[dInd];\n\n      setDndPairs(newPairs.filter((group) => group.length));\n    }\n  };\n\n  function onDragEnd(result: any) {\n    const { source, destination } = result;\n\n    if (result.combine) {\n      const swappeeIndex = dndPairs[result.combine.droppableId].findIndex(\n        (tag) => tag === result.combine.draggableId\n      );\n      const swappeeSource = {\n        droppableId: result.combine.droppableId,\n        index: swappeeIndex,\n      };\n\n      const swapperSource = source;\n      const swapperDestination = swappeeSource;\n\n      if (swapperSource.droppableId === swapperDestination.droppableId) return;\n      const swapResult = swap(\n        dndPairs[swapperSource.droppableId],\n        dndPairs[swapperDestination.droppableId],\n        swapperSource,\n        swapperDestination\n      );\n      const newPairs = [...dndPairs];\n      console.log(\"swapResult\", swapResult);\n      newPairs[source.droppableId] = swapResult[source.droppableId];\n      newPairs[swapperDestination.droppableId] =\n        swapResult[swapperDestination.droppableId];\n      setDndPairs([...newPairs]);\n    } else {\n      moveAndUpdatePairs(source, destination);\n    }\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {dndPairs.map((pair, index) => (\n        <PairCard key={index} pair={pair} pairIndex={index} />\n      ))}\n    </DragDropContext>\n  );\n}\nexport default DndCards;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Row, Col, Tooltip } from \"antd\";\nimport \"./App.css\";\nimport PairInput from \"./components/PairInput/PairInput\";\nimport { Button } from \"antd\";\nimport ParticlesBg from \"particles-bg\";\nimport logo from \"./imgs/logo.png\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport RollButton from \"./components/RollButton/RollButton\";\nimport DndCards from \"./components/DndCards/DndCards\";\n\nfunction App() {\n  const [names, setNames] = useState<string[]>([]);\n\n  const [pairs, setPairs] = useState<string[][]>([]);\n\n  const [doRollAnimation, setDoRollAnimation] = useState<number>(0);\n\n  const [hover, setHover] = useState<boolean>();\n\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>();\n\n  function getRandomInt(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  const createCopyString = (array: String[][]): string => {\n    return `Pairs for ${new Date().toDateString()}: ${array\n      .map((item) => `\\n(${item.join(\", \")})`)\n      .join(\"\")}\\nGenerated using ${window.location.href}`;\n  };\n\n  const generatePairs = useCallback((names: string[]) => {\n    setDoRollAnimation(1);\n    let temp = names;\n    let tempPairs: string[][] = [];\n    while (temp.length > 0) {\n      let randomIndex = getRandomInt(0, temp.length);\n      const name1 = temp[randomIndex];\n      temp = temp.filter((item: string) => item !== name1);\n      if (temp.length === 0) {\n        tempPairs = [...tempPairs, [name1]];\n        break;\n      }\n      randomIndex = getRandomInt(0, temp.length);\n      const name2 = temp[randomIndex];\n      temp = temp.filter((item: string) => item !== name2);\n      tempPairs = [...tempPairs, [name1, name2]];\n    }\n    setPairs(tempPairs);\n  }, []);\n\n  const createRequestUri = (names: string[]) => {\n    names.length > 0\n      ? window.history.replaceState(null, \"\", `?names=${names.join()}`)\n      : window.history.replaceState(null, \"\", \"/\");\n  };\n\n  useEffect(() => {\n    const windowUrl = window.location.search;\n    const params = new URLSearchParams(windowUrl);\n    const namesFromUrl = params.get(\"names\");\n    if (namesFromUrl) {\n      const namesFromUrlArray = namesFromUrl\n        .split(\",\")\n        .filter((item) => item !== \"\")\n        .map((item) => decodeURIComponent(item).trim());\n      setNames(namesFromUrlArray);\n      generatePairs(namesFromUrlArray);\n    }\n  }, [generatePairs]);\n\n  return (\n    <>\n      <div className=\"App\">\n        <Col>\n          <Row align=\"middle\" justify=\"center\" gutter={[8, 36]}>\n            <Col>\n              <img height=\"100\" width=\"100\" alt={\"logo\"} src={logo} />\n            </Col>\n            <Col>\n              <span className=\"title-text\">Pair Gen</span>\n            </Col>\n          </Row>\n          <Row align=\"middle\" justify=\"center\" gutter={[8, 8]}>\n            <PairInput\n              names={names}\n              onNewName={(names) => {\n                setNames(names);\n              }}\n              onEnter={(names) => {\n                createRequestUri(names);\n                generatePairs(names);\n              }}\n            />\n            <Col>\n              <RollButton\n                doAnimation={doRollAnimation}\n                onClick={() => {\n                  createRequestUri(names);\n                  generatePairs(names);\n                }}\n                onRollAnimationEnd={() => {\n                  setDoRollAnimation(0);\n                }}\n              />\n            </Col>\n          </Row>\n\n          <Row align=\"middle\" justify=\"center\" gutter={[16, 1]}>\n            <div\n              className={`pair-card-container ${\n                hover ? \"pair-card-container-hover\" : \"\"\n              }`}\n            >\n              <DndCards pairs={pairs} onPairChange={(newPairs) => setPairs(newPairs)}/>\n            </div>\n          </Row>\n          <Row align=\"middle\" justify=\"center\">\n            <div className={\"copy-container\"}>\n              {pairs.length > 0 && (\n                <Tooltip\n                  placement=\"right\"\n                  color={\"white\"}\n                  overlayClassName={\"copied-tooltip\"}\n                  trigger={\"click\"}\n                  visible={tooltipVisible}\n                  title={\n                    <span style={{ color: \"black\", fontWeight: \"bold\" }}>\n                      Copied!\n                    </span>\n                  }\n                >\n                  <Button\n                    onMouseEnter={() => {\n                      setHover(true);\n                    }}\n                    onMouseLeave={() => {\n                      setHover(false);\n                    }}\n                    onClick={() => {\n                      setTooltipVisible(true);\n                      setTimeout(() => {\n                        setTooltipVisible(false);\n                      }, 1000);\n                      navigator.clipboard.writeText(createCopyString(pairs));\n                    }}\n                    style={{ background: \"transparent\", border: 0 }}\n                  >\n                    <CopyOutlined className=\"copy-icon\" />\n                  </Button>\n                </Tooltip>\n              )}\n            </div>\n          </Row>\n        </Col>\n      </div>\n      <ParticlesBg color=\"#56ca8d\" num={40} type=\"cobweb\" bg={true} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}