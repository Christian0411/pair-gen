{"version":3,"sources":["components/PairInput/PairInput.tsx","components/PairCard/PairCard.tsx","imgs/logo.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Key","PairInput","names","onNewName","onEnter","useState","tags","setTags","nameInput","setNameInput","nameInputRef","useRef","useEffect","addTag","tag","String","popTag","item","pop","className","map","style","margin","display","alignItems","closable","onClose","e","preventDefault","newTags","filter","current","focus","deleteTag","color","ref","autoFocus","placeholder","length","onChange","target","value","onPaste","pastedTags","pasted","clipboardData","getData","pastedTagsNewline","replace","split","onKeyDown","which","keyCode","trim","console","log","PairCard","pair","pairIndex","title","bordered","person","App","setNames","pairs","setPairs","getRandomInt","min","max","Math","ceil","floor","random","align","justify","gutter","height","width","src","logo","temp","tempPairs","randomIndex","name1","name2","onClick","array","navigator","clipboard","writeText","Date","toDateString","join","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89b2e693.chunk.js","sourcesContent":["import { Tag } from \"antd\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport \"./PairInput.css\";\n\ninterface PairInputProps {\n  names: string[];\n  onNewName: (names: string[]) => void;\n  onEnter: (names: string[]) => void;\n}\n\nconst Key = {\n  SPACE: 32,\n  BACKSPACE: 8,\n  LEFT_ARROW: 37,\n  ENTER: 13,\n  TAB: 9,\n};\n\nfunction PairInput({ names, onNewName, onEnter }: PairInputProps) {\n  const [tags, setTags] = useState<string[]>([]);\n\n  const [nameInput, setNameInput] = useState<string>(\"\");\n\n  const nameInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    setTags(names);\n  }, [names]);\n\n  useEffect(() => {\n    onNewName(names);\n  }, [tags, names, onNewName]);\n\n  const handleInput = (e: any) => {\n    e.which = e.which || e.keyCode;\n    if (e.which === Key.SPACE || e.which === Key.TAB) {\n      if (e.target.value.trim(\" \") !== \"\") {\n        e.preventDefault();\n        addTag(e.target.value);\n      }\n    } else if (e.which === Key.BACKSPACE) {\n      if (e.target.value === \"\") {\n        popTag();\n      }\n    } else if (e.which === Key.LEFT_ARROW) {\n      if (e.target.value === \"\") {\n        e.preventDefault();\n        const item = popTag();\n        setNameInput(item);\n      }\n    } else if (e.which === Key.ENTER) {\n      console.log(e.target.value);\n      if (e.target.value !== \"\") {\n        addTag(e.target.value);\n        onEnter([...tags, e.target.value]);\n      } else {\n        onEnter(tags);\n      }\n    }\n  };\n\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    const pasted = e.clipboardData.getData(\"Text\");\n    let pastedTags;\n\n    const pastedTagsNewline = pasted\n      .replace(/\\r/g, \"\")\n      .split(/\\n/)\n      .filter((item) => item !== \"\");\n\n    if (pastedTagsNewline.length === 1) {\n      pastedTags = pasted.split(\" \").filter((item) => item !== \"\");\n    } else {\n      pastedTags = pastedTagsNewline;\n    }\n\n    setTags([...tags, ...pastedTags]);\n    setNameInput(\"\");\n    e.preventDefault();\n  };\n\n  const addTag = (tag: string) => {\n    setTags([...tags, String(tag)]);\n    setNameInput(\"\");\n  };\n\n  const popTag = (): string => {\n    const item = tags.pop();\n    setTags([...tags]);\n    return item ?? \"\";\n  };\n\n  const deleteTag = (item: string) => {\n    const newTags = tags.filter((tag) => tag !== item);\n    setTags(newTags);\n    nameInputRef?.current?.focus();\n  };\n\n  return (\n    <>\n      <div className=\"input-container\">\n        {tags.map((item: string) => (\n          <Tag\n            style={{ margin: \"4px\", display: \"flex\", alignItems: \"center\" }}\n            closable\n            onClose={(e) => {\n              e.preventDefault();\n              deleteTag(item);\n            }}\n            color=\"#63b89e\"\n          >\n            {item}\n          </Tag>\n        ))}\n        <input\n          className=\"pair-input\"\n          ref={nameInputRef}\n          autoFocus\n          placeholder={(() => {\n            return tags.length ? \"\" : \"Enter names. Ex. chris robert oscar\";\n          })()}\n          onChange={(e) => setNameInput(String(e.target.value))}\n          onPaste={handlePaste}\n          onKeyDown={handleInput}\n          value={nameInput}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default PairInput;\n","import React from \"react\";\nimport { Card, Tag } from \"antd\";\nimport \"./PairCard.css\";\n\ninterface PairCardProps {\n  pair: string[];\n  pairIndex: number;\n}\n\nfunction PairCard({ pair, pairIndex }: PairCardProps) {\n  console.log(pair);\n  return (\n    <Card title={`Pair ${pairIndex}`} bordered={false}>\n      <div className={\"tag-container\"}>\n        {pair.map((person) => (\n          <Tag color=\"#63b89e\">{person}</Tag>\n        ))}\n      </div>\n    </Card>\n  );\n}\nexport default PairCard;\n","export default __webpack_public_path__ + \"static/media/logo.1d089e06.png\";","import React, { useState } from \"react\";\nimport { Row, Col, Slider } from \"antd\";\nimport \"./App.css\";\nimport PairInput from \"./components/PairInput/PairInput\";\nimport PairCard from \"./components/PairCard/PairCard\";\nimport { Button } from \"antd\";\nimport logo from \"./imgs/logo.png\";\n\nfunction App() {\n  const [names, setNames] = useState<string[]>([]);\n\n  const [pairs, setPairs] = useState<string[][]>([]);\n\n  function getRandomInt(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  const StringifyArray = (array: String[][]): string => {\n    return `Pairs for ${new Date().toDateString()}: ${array\n      .map((item) => `\\n(${item.join(\", \")})`)\n      .join(\"\")}`;\n  };\n\n  const generatePairs = (names: string[]) => {\n    setNames([]);\n    let temp = names;\n    let tempPairs: string[][] = [];\n    while (temp.length > 0) {\n      let randomIndex = getRandomInt(0, temp.length);\n      const name1 = temp[randomIndex];\n      temp = temp.filter((item: string) => item !== name1);\n      if (temp.length === 0) {\n        tempPairs = [...tempPairs, [name1]];\n        break;\n      }\n      randomIndex = getRandomInt(0, temp.length);\n      const name2 = temp[randomIndex];\n      temp = temp.filter((item: string) => item !== name2);\n      tempPairs = [...tempPairs, [name1, name2]];\n    }\n    setPairs(tempPairs);\n  };\n\n  return (\n    <div className=\"App\">\n      <Col>\n        <Row align=\"middle\" justify=\"center\" gutter={[8, 8]}>\n          <Col>\n            <img height=\"100\" width=\"100\" src={logo} />\n          </Col>\n          <Col>\n            <span className=\"title-text\">Pair Gen</span>\n          </Col>\n        </Row>\n        <Row align=\"middle\" justify=\"center\" gutter={[8, 8]}>\n          <PairInput\n            names={names}\n            onNewName={setNames}\n            onEnter={generatePairs}\n          />\n          {pairs.length > 0 && (\n            <Button\n              onClick={() => {\n                navigator.clipboard.writeText(StringifyArray(pairs));\n              }}\n            >\n              Copy\n            </Button>\n          )}\n        </Row>\n        <Row align=\"middle\" justify=\"center\" gutter={[8, 8]}>\n          <div className={\"pair-card-container\"}>\n            {pairs.map((pair, index) => (\n              <PairCard pair={pair} pairIndex={index} />\n            ))}\n          </div>\n        </Row>\n      </Col>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}